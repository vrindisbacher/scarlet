WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT = _{ "//" ~ (!"\n" ~ ANY)* }

// Main grammar
file = { SOI ~ (enum_def | type_def | service_def)* ~ EOI }

// Identifiers and literals
identifier = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
string_literal = @{ "\"" ~ (!("\"") ~ ANY)* ~ "\"" }

// Enum definitions
enum_def = { "enum" ~ identifier ~ "=" ~ enum_values }
enum_values = { string_literal ~ ("|" ~ string_literal)* }

// Type definitions
type_def = { "type" ~ identifier ~ "=" ~ type_expr }

type_expr = { array_type | object_type | primitive_type | identifier }

array_type = { (object_type | primitive_type | identifier) ~ "[" ~ "]" }
object_type = { "{" ~ field_list? ~ "}" }
field_list = { field ~ ("," ~ field)* ~ ","? }
field = { identifier ~ ":" ~ type_expr }

primitive_type = { "string" | "number" | "boolean" | "null" }

// Service definitions
service_def = { "service" ~ identifier ~ "{" ~ service_body* ~ "}" }

service_body = { type_def | call_def }

// Call definitions
call_def = { "call" ~ identifier ~ "{" ~ call_field* ~ "}" }

call_field = { 
    (method_field | url_field | request_field | response_field) ~ ","?
}

method_field = { "method" ~ "=" ~ http_method }
url_field = { "url" ~ "=" ~ url_value }
request_field = { "request" ~ "=" ~ type_reference }
response_field = { "response" ~ "=" ~ type_reference }

http_method = { "GET" | "POST" | "PUT" | "DELETE" | "PATCH" | "HEAD" | "OPTIONS" }
url_value = @{ (!("\n" | "," | "}") ~ ANY)+ }
type_reference = { identifier ~ ("." ~ identifier)? }